import Head from 'next/head'
import { useState, useEffect } from 'react'
import Pusher from 'pusher-js'
// import axios from 'axios';

export default function Home() {

  const [username, setUsername] = useState('username')
  const [messages, setMessages] = useState([])
  const [message, setMessage] = useState("")

  const submit = async(e) => {
    e.preventDefault();

    // setMessages(m => [...m,message])
    /* await axios.post('http://localhost:8000/api/messages', {
      username,
      message
    }) */
    console.log(typeof(username))
    console.log(typeof(message))
    try {
      await fetch('http://localhost:8000/api/messages', {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
          username: username,
          message: message
        })
      })
    } catch(err) {console.log("Exception on saving to pusher ", err)}

    setMessage('')
    getData()
  }

  let allMessages = [];

  const getData = () => {
    try {
      Pusher.logToConsole = true;
      var pusher = new Pusher('c51886f471625923d04a', {
        cluster: 'ap2'
      });

      var channel = pusher.subscribe('rad-node-936');
      channel.bind('message', function(data) {
        allMessages.push(data)
        setMessages(allMessages)
        // setMessages(msgs => [...msgs, data])
      });
    } catch(err) { console.log("Exception occured while connecting to pusher ", err) }
  }

  useEffect(() => {
    getData();
  }, [])

  useEffect(() => {
    console.log("messages ", messages)
  },[messages])

  return (
    
    <>
      <Head>
        <title>Firefly Chat</title>
        <meta name="description" content="Generated by create next app" />
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='container flex flex-col min-h-screen'>
        <div className='mx-52 border-b border-b-slate-500'>
          <input className='border border-slate-700 m-10 p-2 rounded-md' value={username} onChange={(e) => setUsername(e.target.value)} />
        </div>
        {console.log("messages",messages)}
        {messages.map((msg, index) => {
          return (
            <div className='flex flex-row m-10 mb-0 mx-52' key={index}>
              <div className='border border-black align-middle text-center rounded-full h-9 p-1.5 px-1.5 mr-2 mt-0.5 bg-slate-800 text-white' key={index+1}>{(msg.username[0]+msg.username[1]).toUpperCase()}</div>
              <div className='border border-slate-700 p-2 max-w-[40%] rounded-md w-screen' key={index+2}>{msg.message}</div>
            </div>
          )
        })}
        <form onSubmit={submit} className='align-bottom mt-auto mb-5'>
          <input className='mx-52 p-2 border border-slate-400 outline-slate-500 align-bottom rounded-md' placeholder='Write a message' value={message} onChange={(e) => setMessage(e.target.value)} />
        </form>
      </div>

      
    </>
  )
}
